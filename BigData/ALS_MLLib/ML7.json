{"paragraphs":[{"text":"%spark2.pyspark\r\nfrom pyspark.ml.evaluation import RegressionEvaluator\r\nfrom pyspark.ml.recommendation import ALS\r\n\r\n\r\n#Load up movie ID -> movie name dictionary\r\ndef loadMovieNames():\r\n    movieNames = {}\r\n    with open(\"/root/mov.csv\") as f:\r\n        for line in f:\r\n            fields = line.split(',')\r\n            #key = str(fields[0])\r\n            key = fields[0]\r\n            #print(key)\r\n            movieNames.setdefault(key, [])\r\n            movieNames[key].append(fields[1])\r\n            movieNames.setdefault(key, [])\r\n            movieNames[key].append(fields[2])\r\n            \r\n    return movieNames\r\n\r\n# Load up our movie ID -> name dictionary\r\nmovieNames = loadMovieNames()\r\n\r\n# Making DataFrame of the rat.csv data\r\nratings = spark.read.csv('/__dsets/rat.csv', inferSchema=True)\r\nratings.show(5)\r\n\r\nratings = ratings.withColumnRenamed(\"_c0\", \"userID\").withColumnRenamed(\"_c1\", \"movieID\").withColumnRenamed(\"_c2\", \"rating\")\r\nratings.show(5)\r\n\r\n(train, test) = ratings.randomSplit([0.8, 0.2],seed=100)\r\n\r\n# Create an ALS collaborative filtering model from the complete data set\r\nals = ALS(maxIter=5, regParam=0.01, userCol=\"userID\", itemCol=\"movieID\", ratingCol=\"rating\",coldStartStrategy=\"drop\")\r\n\r\nmodel2 = als.fit(train)\r\n\r\npredictions = model2.transform(test)\r\npredictions.show(10)\r\n\r\nevaluator = RegressionEvaluator(metricName=\"rmse\", labelCol=\"rating\",\r\n                                predictionCol=\"prediction\")\r\nrmse = evaluator.evaluate(predictions)\r\nprint(\"Root-mean-square error = \" + str(rmse))\r\n\r\n\r\n#<<<<<<<<<<<SEcond PArt>>>>>>>>>>\r\n\r\nprint('>>>>>>Movies already loved and highly rated by User#1<<<<<<<')\r\n\r\n# Finding Highest rated Movies and genres by User:1 from train data\r\n\r\nuser1_train= train.filter(train['userID']==1)\r\n\r\nuser1_trains= user1_train.orderBy('rating',ascending=False)\r\n\r\nfor user1 in user1_trains.collect():\r\n    key1 = str(user1['movieID'])\r\n    print (user1['movieID'],movieNames[key1][0], movieNames[key1][1],user1['rating'])\r\n\r\n#>>>Prediction<<<<<<\r\n\r\nprint('>>>>Recomendation for User#1<<<<<')\r\n\r\n# Predicting Movies/genres, supposed to be loved by User:1 and rated higher\r\n\r\nuser1_test= test.filter(test['userID']==1).select(['movieID','userID'])\r\n\r\n#user1_test.show()\r\n\r\nrecommendation = model2.transform(user1_test)\r\n\r\ntopRecommendations= recommendation.orderBy('prediction',ascending=False)\r\n\r\nfor recommendation in topRecommendations.collect():\r\n    print (recommendation['movieID'],movieNames[str(recommendation['movieID'])][0], movieNames[str(recommendation['movieID'])][1],recommendation['prediction'])\r\n    \r\n\r\n#>>>>> Seeing the predicted rating for Top-10 and the actual rating side by side\r\n\r\nprint('>>>>Recommender Predicted Rating and Actual Rating for User#1 side by side <<<<<')\r\n\r\nuser1_testr= test.filter(test['userID']==1).select(['movieID','rating'])\r\n\r\nxx=user1_testr.collect()\r\n\r\nyy = topRecommendations.collect()\r\n\r\nfor i in range(0,10):\r\n    for x in xx:\r\n        if x['movieID']==yy[i][0]:\r\n            print (yy[i][0],movieNames[str(yy[i][0])][0], movieNames[str(yy[i][0])][1],yy[i][2],x['rating'])\r\n","user":"anonymous","dateUpdated":"2019-04-11T19:03:03+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---+---+---+----------+\n|_c0|_c1|_c2|       _c3|\n+---+---+---+----------+\n|  1|  2|3.5|1112486027|\n|  1| 29|3.5|1112484676|\n|  1| 32|3.5|1112484819|\n|  1| 47|3.5|1112484727|\n|  1| 50|3.5|1112484580|\n+---+---+---+----------+\nonly showing top 5 rows\n\n+------+-------+------+----------+\n|userID|movieID|rating|       _c3|\n+------+-------+------+----------+\n|     1|      2|   3.5|1112486027|\n|     1|     29|   3.5|1112484676|\n|     1|     32|   3.5|1112484819|\n|     1|     47|   3.5|1112484727|\n|     1|     50|   3.5|1112484580|\n+------+-------+------+----------+\nonly showing top 5 rows\n\n+------+-------+------+----------+----------+\n|userID|movieID|rating|       _c3|prediction|\n+------+-------+------+----------+----------+\n| 13170|    148|   3.0| 885524891| 0.2673341|\n|  1259|    148|   5.0| 828625487|  3.781226|\n|  5585|    148|   3.0| 833940677| 3.1720262|\n| 80168|    148|   4.0| 835820190| 3.3424747|\n| 36445|    148|   4.5|1419358555|  1.781539|\n| 46146|    148|   2.0| 839629075| 1.2528625|\n|125969|    148|   3.0| 940129037| 2.8797817|\n| 64843|    148|   3.5|1104862927| 2.7492032|\n|111523|    148|   2.0| 942665835| 3.2356071|\n|118205|    148|   3.5|1138041704| 2.9195168|\n+------+-------+------+----------+----------+\nonly showing top 10 rows\n\nRoot-mean-square error = 0.815900439836\n>>>>>>Movies already loved and highly rated by User#1<<<<<<<\n(4993, '\"Lord of the Rings: The Fellowship of the Ring', ' The (2001)\"', 5.0)\n(5952, '\"Lord of the Rings: The Two Towers', ' The (2002)\"', 5.0)\n(1196, 'Star Wars: Episode V - The Empire Strikes Back (1980)', 'Action|Adventure|Sci-Fi\\r\\n', 4.5)\n(1198, 'Raiders of the Lost Ark (Indiana Jones and the Raiders of the Lost Ark) (1981)', 'Action|Adventure\\r\\n', 4.5)\n(8636, 'Spider-Man 2 (2004)', 'Action|Adventure|Sci-Fi|IMAX\\r\\n', 4.5)\n(151, 'Rob Roy (1995)', 'Action|Drama|Romance|War\\r\\n', 4.0)\n(293, 'L\\xc3\\xa9on: The Professional (a.k.a. The Professional) (L\\xc3\\xa9on) (1994)', 'Action|Crime|Drama|Thriller\\r\\n', 4.0)\n(296, 'Pulp Fiction (1994)', 'Comedy|Crime|Drama|Thriller\\r\\n', 4.0)\n(318, '\"Shawshank Redemption', ' The (1994)\"', 4.0)\n(1036, 'Die Hard (1988)', 'Action|Crime|Thriller\\r\\n', 4.0)\n(1079, '\"Fish Called Wanda', ' A (1988)\"', 4.0)\n(1097, 'E.T. the Extra-Terrestrial (1982)', 'Children|Drama|Sci-Fi\\r\\n', 4.0)\n(1200, 'Aliens (1986)', 'Action|Adventure|Horror|Sci-Fi\\r\\n', 4.0)\n(1215, 'Army of Darkness (1993)', 'Action|Adventure|Comedy|Fantasy|Horror\\r\\n', 4.0)\n(1219, 'Psycho (1960)', 'Crime|Horror\\r\\n', 4.0)\n(1249, '\"Femme Nikita', ' La (Nikita) (1990)\"', 4.0)\n(1258, '\"Shining', ' The (1980)\"', 4.0)\n(1259, 'Stand by Me (1986)', 'Adventure|Drama\\r\\n', 4.0)\n(1266, 'Unforgiven (1992)', 'Drama|Western\\r\\n', 4.0)\n(1333, '\"Birds', ' The (1963)\"', 4.0)\n(1358, 'Sling Blade (1996)', 'Drama\\r\\n', 4.0)\n(1374, 'Star Trek II: The Wrath of Khan (1982)', 'Action|Adventure|Sci-Fi|Thriller\\r\\n', 4.0)\n(1387, 'Jaws (1975)', 'Action|Horror\\r\\n', 4.0)\n(1967, 'Labyrinth (1986)', 'Adventure|Fantasy|Musical\\r\\n', 4.0)\n(2021, 'Dune (1984)', 'Adventure|Sci-Fi\\r\\n', 4.0)\n(2100, 'Splash (1984)', 'Comedy|Fantasy|Romance\\r\\n', 4.0)\n(2118, '\"Dead Zone', ' The (1983)\"', 4.0)\n(2138, 'Watership Down (1978)', 'Adventure|Animation|Children|Drama|Fantasy\\r\\n', 4.0)\n(2143, 'Legend (1985)', 'Adventure|Fantasy|Romance\\r\\n', 4.0)\n(2174, 'Beetlejuice (1988)', 'Comedy|Fantasy\\r\\n', 4.0)\n(2193, 'Willow (1988)', 'Action|Adventure|Fantasy\\r\\n', 4.0)\n(2288, '\"Thing', ' The (1982)\"', 4.0)\n(2291, 'Edward Scissorhands (1990)', 'Drama|Fantasy|Romance\\r\\n', 4.0)\n(2542, '\"Lock', ' Stock & Two Smoking Barrels (1998)\"', 4.0)\n(2628, 'Star Wars: Episode I - The Phantom Menace (1999)', 'Action|Adventure|Sci-Fi\\r\\n', 4.0)\n(2762, '\"Sixth Sense', ' The (1999)\"', 4.0)\n(2872, 'Excalibur (1981)', 'Adventure|Fantasy\\r\\n', 4.0)\n(2944, '\"Dirty Dozen', ' The (1967)\"', 4.0)\n(2959, 'Fight Club (1999)', 'Action|Crime|Drama|Thriller\\r\\n', 4.0)\n(2968, 'Time Bandits (1981)', 'Adventure|Comedy|Fantasy|Sci-Fi\\r\\n', 4.0)\n(3081, 'Sleepy Hollow (1999)', 'Fantasy|Horror|Mystery|Romance\\r\\n', 4.0)\n(3153, '\"7th Voyage of Sinbad', ' The (1958)\"', 4.0)\n(3479, 'Ladyhawke (1985)', 'Adventure|Fantasy|Romance\\r\\n', 4.0)\n(3489, 'Hook (1991)', 'Adventure|Comedy|Fantasy\\r\\n', 4.0)\n(3499, 'Misery (1990)', 'Drama|Horror|Thriller\\r\\n', 4.0)\n(3889, 'Highlander: Endgame (Highlander IV) (2000)', 'Action|Adventure|Fantasy\\r\\n', 4.0)\n(3996, '\"Crouching Tiger', ' Hidden Dragon (Wo hu cang long) (2000)\"', 4.0)\n(4128, '\"Lost Boys', ' The (1987)\"', 4.0)\n(4306, 'Shrek (2001)', 'Adventure|Animation|Children|Comedy|Fantasy|Romance\\r\\n', 4.0)\n(4467, '\"Adventures of Baron Munchausen', ' The (1988)\"', 4.0)\n(4571, \"Bill & Ted's Excellent Adventure (1989)\", 'Adventure|Comedy|Sci-Fi\\r\\n', 4.0)\n(4754, '\"Wicker Man', ' The (1973)\"', 4.0)\n(4896, \"Harry Potter and the Sorcerer's Stone (a.k.a. Harry Potter and the Philosopher's Stone) (2001)\", 'Adventure|Children|Fantasy\\r\\n', 4.0)\n(4911, 'Jabberwocky (1977)', 'Adventure|Comedy|Fantasy\\r\\n', 4.0)\n(5026, '\"Brotherhood of the Wolf (Pacte des loups', ' Le) (2001)\"', 4.0)\n(5039, 'Dragonslayer (1981)', 'Action|Adventure|Fantasy\\r\\n', 4.0)\n(5171, '\"Time Machine', ' The (2002)\"', 4.0)\n(5540, 'Clash of the Titans (1981)', 'Action|Adventure|Fantasy|Romance\\r\\n', 4.0)\n(5797, '\"Company of Wolves', ' The (1984)\"', 4.0)\n(5816, 'Harry Potter and the Chamber of Secrets (2002)', 'Adventure|Fantasy\\r\\n', 4.0)\n(6093, '\"Last Unicorn', ' The (1982)\"', 4.0)\n(6333, 'X2: X-Men United (2003)', 'Action|Adventure|Sci-Fi|Thriller\\r\\n', 4.0)\n(6539, 'Pirates of the Caribbean: The Curse of the Black Pearl (2003)', 'Action|Adventure|Comedy|Fantasy\\r\\n', 4.0)\n(6754, 'Underworld (2003)', 'Action|Fantasy|Horror\\r\\n', 4.0)\n(6774, 'Videodrome (1983)', 'Fantasy|Horror|Sci-Fi|Thriller\\r\\n', 4.0)\n(7046, '\"Witches of Eastwick', ' The (1987)\"', 4.0)\n(7389, 'One Million Years B.C. (1966)', 'Adventure|Fantasy\\r\\n', 4.0)\n(7438, 'Kill Bill: Vol. 2 (2004)', 'Action|Drama|Thriller\\r\\n', 4.0)\n(7454, 'Van Helsing (2004)', 'Action|Adventure|Fantasy|Horror\\r\\n', 4.0)\n(7757, 'Jason and the Argonauts (1963)', 'Action|Adventure|Fantasy\\r\\n', 4.0)\n(8368, 'Harry Potter and the Prisoner of Azkaban (2004)', 'Adventure|Fantasy|IMAX\\r\\n', 4.0)\n(8961, '\"Incredibles', ' The (2004)\"', 4.0)\n(31696, 'Constantine (2005)', 'Action|Fantasy|Horror|Thriller\\r\\n', 4.0)\n(2, 'Jumanji (1995)', 'Adventure|Children|Fantasy\\r\\n', 3.5)\n(29, '\"City of Lost Children', ' The (Cit\\xc3\\xa9 des enfants perdus', 3.5)\n(32, 'Twelve Monkeys (a.k.a. 12 Monkeys) (1995)', 'Mystery|Sci-Fi|Thriller\\r\\n', 3.5)\n(47, 'Seven (a.k.a. Se7en) (1995)', 'Mystery|Thriller\\r\\n', 3.5)\n(112, 'Rumble in the Bronx (Hont faan kui) (1995)', 'Action|Adventure|Comedy|Crime\\r\\n', 3.5)\n(337, \"What's Eating Gilbert Grape (1993)\", 'Drama\\r\\n', 3.5)\n(367, '\"Mask', ' The (1994)\"', 3.5)\n(589, 'Terminator 2: Judgment Day (1991)', 'Action|Sci-Fi\\r\\n', 3.5)\n(593, '\"Silence of the Lambs', ' The (1991)\"', 3.5)\n(924, '2001: A Space Odyssey (1968)', 'Adventure|Drama|Sci-Fi\\r\\n', 3.5)\n(1080, \"Monty Python's Life of Brian (1979)\", 'Comedy\\r\\n', 3.5)\n(1136, 'Monty Python and the Holy Grail (1975)', 'Adventure|Comedy|Fantasy\\r\\n', 3.5)\n(1193, \"One Flew Over the Cuckoo's Nest (1975)\", 'Drama\\r\\n', 3.5)\n(1217, 'Ran (1985)', 'Drama|War\\r\\n', 3.5)\n(1222, 'Full Metal Jacket (1987)', 'Drama|War\\r\\n', 3.5)\n(1246, 'Dead Poets Society (1989)', 'Drama\\r\\n', 3.5)\n(1261, 'Evil Dead II (Dead by Dawn) (1987)', 'Action|Comedy|Fantasy|Horror\\r\\n', 3.5)\n(1262, '\"Great Escape', ' The (1963)\"', 3.5)\n(1291, 'Indiana Jones and the Last Crusade (1989)', 'Action|Adventure\\r\\n', 3.5)\n(1348, '\"Nosferatu (Nosferatu', ' eine Symphonie des Grauens) (1922)\"', 3.5)\n(1350, '\"Omen', ' The (1976)\"', 3.5)\n(1584, 'Contact (1997)', 'Drama|Sci-Fi\\r\\n', 3.5)\n(1848, '\"Borrowers', ' The (1997)\"', 3.5)\n(1920, 'Small Soldiers (1998)', 'Animation|Children|Fantasy|War\\r\\n', 3.5)\n(1994, 'Poltergeist (1982)', 'Horror|Thriller\\r\\n', 3.5)\n(1997, '\"Exorcist', ' The (1973)\"', 3.5)\n(2194, '\"Untouchables', ' The (1987)\"', 3.5)\n(2253, 'Toys (1992)', 'Comedy|Fantasy\\r\\n', 3.5)\n(2644, 'Dracula (1931)', 'Horror\\r\\n', 3.5)\n(2664, 'Invasion of the Body Snatchers (1956)', 'Horror|Sci-Fi|Thriller\\r\\n', 3.5)\n(2683, 'Austin Powers: The Spy Who Shagged Me (1999)', 'Action|Adventure|Comedy\\r\\n', 3.5)\n(2804, '\"Christmas Story', ' A (1983)\"', 3.5)\n(2918, \"Ferris Bueller's Day Off (1986)\", 'Comedy\\r\\n', 3.5)\n(2947, 'Goldfinger (1964)', 'Action|Adventure|Thriller\\r\\n', 3.5)\n(3000, 'Princess Mononoke (Mononoke-hime) (1997)', 'Action|Adventure|Animation|Drama|Fantasy\\r\\n', 3.5)\n(3265, 'Hard-Boiled (Lat sau san taam) (1992)', 'Action|Crime|Drama|Thriller\\r\\n', 3.5)\n(3438, 'Teenage Mutant Ninja Turtles (1990)', 'Action|Children|Comedy|Fantasy|Sci-Fi\\r\\n', 3.5)\n(3476, \"Jacob's Ladder (1990)\", 'Horror|Mystery\\r\\n', 3.5)\n(3997, 'Dungeons & Dragons (2000)', 'Adventure|Fantasy\\r\\n', 3.5)\n(4720, '\"Others', ' The (2001)\"', 3.5)\n(4878, 'Donnie Darko (2001)', 'Drama|Mystery|Sci-Fi|Thriller\\r\\n', 3.5)\n(4941, 'Flash Gordon (1980)', 'Action|Adventure|Sci-Fi\\r\\n', 3.5)\n(4980, \"Bill & Ted's Bogus Journey (1991)\", 'Adventure|Comedy|Fantasy|Sci-Fi\\r\\n', 3.5)\n(5146, 'Vampire Hunter D: Bloodlust (Banpaia hant\\xc3\\xa2 D) (2000)', 'Animation|Fantasy|Horror|Sci-Fi\\r\\n', 3.5)\n(5679, '\"Ring', ' The (2002)\"', 3.5)\n(5898, '\"Sword and the Sorcerer', ' The (1982)\"', 3.5)\n(5999, 'Heavy Metal 2000 (2000)', 'Action|Adventure|Animation|Fantasy|Sci-Fi\\r\\n', 3.5)\n(6502, '28 Days Later (2002)', 'Action|Horror|Sci-Fi\\r\\n', 3.5)\n(6755, 'Bubba Ho-tep (2002)', 'Comedy|Horror\\r\\n', 3.5)\n(6807, \"Monty Python's The Meaning of Life (1983)\", 'Comedy\\r\\n', 3.5)\n(6834, 'Wilder Napalm (1993)', 'Comedy|Fantasy|Romance\\r\\n', 3.5)\n(7001, 'Invasion of the Body Snatchers (1978)', 'Horror|Mystery|Sci-Fi|Thriller\\r\\n', 3.5)\n(7045, '\"Witches', ' The (1990)\"', 3.5)\n(7164, 'Peter Pan (2003)', 'Action|Adventure|Children|Fantasy\\r\\n', 3.5)\n(7247, 'Chitty Chitty Bang Bang (1968)', 'Adventure|Children|Comedy|Fantasy|Musical\\r\\n', 3.5)\n(7387, 'Dawn of the Dead (1978)', 'Action|Drama|Horror\\r\\n', 3.5)\n(7449, 'Godsend (2004)', 'Drama|Horror|Thriller\\r\\n', 3.5)\n(8482, '\"Picture of Dorian Gray', ' The (1945)\"', 3.5)\n(8690, 'Slaughterhouse-Five (1972)', 'Comedy|Drama|Sci-Fi|War\\r\\n', 3.5)\n(653, 'Dragonheart (1996)', 'Action|Adventure|Fantasy\\r\\n', 3.0)\n(1201, '\"Good', ' the Bad and the Ugly', 3.0)\n(1243, 'Rosencrantz and Guildenstern Are Dead (1990)', 'Comedy|Drama\\r\\n', 3.0)\n(1304, 'Butch Cassidy and the Sundance Kid (1969)', 'Action|Western\\r\\n', 3.0)\n(1525, 'Warriors of Virtue (1997)', 'Action|Adventure|Children|Fantasy\\r\\n', 3.0)\n(3030, 'Yojimbo (1961)', 'Action|Adventure\\r\\n', 3.0)\n(3932, '\"Invisible Man', ' The (1933)\"', 3.0)\n(4915, '\"Beastmaster', ' The (1982)\"', 3.0)\n(5040, 'Conan the Destroyer (1984)', 'Action|Adventure|Fantasy\\r\\n', 3.0)\n(6888, 'Scary Movie 3 (2003)', 'Comedy|Horror\\r\\n', 3.0)\n>>>>Recomendation for User#1<<<<<\n(260, 'Star Wars: Episode IV - A New Hope (1977)', 'Action|Adventure|Sci-Fi\\r\\n', 4.177889823913574)\n(7153, '\"Lord of the Rings: The Return of the King', ' The (2003)\"', 3.983344316482544)\n(1240, '\"Terminator', ' The (1984)\"', 3.9788243770599365)\n(6242, 'Ringu (Ring) (1998)', 'Horror|Mystery|Thriller\\r\\n', 3.9252049922943115)\n(1214, 'Alien (1979)', 'Horror|Sci-Fi\\r\\n', 3.9051353931427)\n(541, 'Blade Runner (1982)', 'Action|Sci-Fi|Thriller\\r\\n', 3.898895740509033)\n(2716, 'Ghostbusters (a.k.a. Ghost Busters) (1984)', 'Action|Comedy|Sci-Fi\\r\\n', 3.8858866691589355)\n(50, '\"Usual Suspects', ' The (1995)\"', 3.8557701110839844)\n(2761, '\"Iron Giant', ' The (1999)\"', 3.7673757076263428)\n(4226, 'Memento (2000)', 'Mystery|Thriller\\r\\n', 3.7665700912475586)\n(1278, 'Young Frankenstein (1974)', 'Comedy|Fantasy\\r\\n', 3.754211187362671)\n(2140, '\"Dark Crystal', ' The (1982)\"', 3.736107110977173)\n(7482, 'Enter the Dragon (1973)', 'Action|Crime\\r\\n', 3.7041568756103516)\n(2692, 'Run Lola Run (Lola rennt) (1998)', 'Action|Crime\\r\\n', 3.701925039291382)\n(4446, 'Final Fantasy: The Spirits Within (2001)', 'Adventure|Animation|Fantasy|Sci-Fi\\r\\n', 3.6953625679016113)\n(223, 'Clerks (1994)', 'Comedy\\r\\n', 3.693181276321411)\n(2648, 'Frankenstein (1931)', 'Drama|Horror|Sci-Fi\\r\\n', 3.669384241104126)\n(4011, 'Snatch (2000)', 'Comedy|Crime|Thriller\\r\\n', 3.6585583686828613)\n(4027, '\"O Brother', ' Where Art Thou? (2000)\"', 3.6224305629730225)\n(1321, '\"American Werewolf in London', ' An (1981)\"', 3.6140642166137695)\n(4105, '\"Evil Dead', ' The (1981)\"', 3.6054906845092773)\n(3037, 'Little Big Man (1970)', 'Western\\r\\n', 3.591733455657959)\n(1370, 'Die Hard 2 (1990)', 'Action|Adventure|Thriller\\r\\n', 3.5601418018341064)\n(919, '\"Wizard of Oz', ' The (1939)\"', 3.548135280609131)\n(1089, 'Reservoir Dogs (1992)', 'Crime|Mystery|Thriller\\r\\n', 3.4425265789031982)\n(8507, 'Freaks (1932)', 'Crime|Drama|Horror\\r\\n', 3.4304966926574707)\n(1208, 'Apocalypse Now (1979)', 'Action|Drama|War\\r\\n', 3.3846189975738525)\n(1090, 'Platoon (1986)', 'Drama|War\\r\\n', 3.3342580795288086)\n(253, 'Interview with the Vampire: The Vampire Chronicles (1994)', 'Drama|Horror\\r\\n', 3.330965757369995)\n(2173, '\"Navigator: A Mediaeval Odyssey', ' The (1988)\"', 3.0962448120117188)\n(4133, 'Masters of the Universe (1987)', 'Action|Adventure|Fantasy|Sci-Fi\\r\\n', 3.040674924850464)\n(1009, 'Escape to Witch Mountain (1975)', 'Adventure|Children|Fantasy\\r\\n', 2.9706642627716064)\n(1750, 'Star Kid (1997)', 'Adventure|Children|Fantasy|Sci-Fi\\r\\n', 2.4027302265167236)\n"}]},"apps":[],"jobName":"paragraph_1554840018809_-2142793385","id":"20190409-200018_687000686","dateCreated":"2019-04-09T20:00:18+0000","dateStarted":"2019-04-10T00:40:32+0000","dateFinished":"2019-04-10T00:48:15+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:45273"},{"text":"%spark2.pyspark\nfrom pyspark.ml.evaluation import RegressionEvaluator\nfrom pyspark.ml.recommendation import ALS\n\n\n#Load up movie ID -> movie name dictionary\ndef loadMovieNames():\n    movieNames = {}\n    with open(\"/root/mov.csv\") as f:\n        for line in f:\n            fields = line.split(',')\n            #key = str(fields[0])\n            key = fields[0]\n            #print(key)\n            movieNames.setdefault(key, [])\n            movieNames[key].append(fields[1])\n            movieNames.setdefault(key, [])\n            movieNames[key].append(fields[2])\n\n    return movieNames\n\n\nprint(1000)\n\n# Load up our movie ID -> name dictionary\nmovieNames = loadMovieNames()\n","user":"anonymous","dateUpdated":"2019-04-11T02:59:56+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python","title":false,"lineNumbers":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"1000\n"}]},"apps":[],"jobName":"paragraph_1554845018647_2020508756","id":"20190409-212338_1498647838","dateCreated":"2019-04-09T21:23:38+0000","dateStarted":"2019-04-11T02:59:57+0000","dateFinished":"2019-04-11T02:59:57+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:45274"},{"text":"%spark2.pyspark\n\nratings = spark.read.csv('/__dsets/rat.csv', inferSchema=True)\n\n    \nprint(4000)\n\nratings.show(5)\n\nprint('4500')\n\nratings = ratings.withColumnRenamed(\"_c0\", \"userID\").withColumnRenamed(\"_c1\", \"movieID\").withColumnRenamed(\"_c2\", \"rating\")\n\nratings.show(5)\n\nprint('5000')\n","user":"anonymous","dateUpdated":"2019-04-11T03:00:02+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"4000\n+---+---+---+----------+\n|_c0|_c1|_c2|       _c3|\n+---+---+---+----------+\n|  1|  2|3.5|1112486027|\n|  1| 29|3.5|1112484676|\n|  1| 32|3.5|1112484819|\n|  1| 47|3.5|1112484727|\n|  1| 50|3.5|1112484580|\n+---+---+---+----------+\nonly showing top 5 rows\n\n4500\n+------+-------+------+----------+\n|userID|movieID|rating|       _c3|\n+------+-------+------+----------+\n|     1|      2|   3.5|1112486027|\n|     1|     29|   3.5|1112484676|\n|     1|     32|   3.5|1112484819|\n|     1|     47|   3.5|1112484727|\n|     1|     50|   3.5|1112484580|\n+------+-------+------+----------+\nonly showing top 5 rows\n\n5000\n"}]},"apps":[],"jobName":"paragraph_1554847113098_-877368301","id":"20190409-215833_282620483","dateCreated":"2019-04-09T21:58:33+0000","dateStarted":"2019-04-11T03:00:02+0000","dateFinished":"2019-04-11T03:01:09+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:45275"},{"text":"%spark2.pyspark\r\nfrom pyspark.ml.evaluation import RegressionEvaluator\r\nfrom pyspark.ml.recommendation import ALS\r\n\r\n(train, test) = ratings.randomSplit([0.8, 0.2],seed=100)\r\n\r\n# Create an ALS collaborative filtering model from the complete data set\r\nals = ALS(maxIter=5, regParam=0.01, userCol=\"userID\", itemCol=\"movieID\", ratingCol=\"rating\",coldStartStrategy=\"drop\")\r\n\r\nprint('5000')\r\n\r\nmodel2 = als.fit(train)\r\n\r\npredictions = model2.transform(test)\r\n\r\npredictions.show(10)\r\n\r\nevaluator = RegressionEvaluator(metricName=\"rmse\", labelCol=\"rating\",\r\n                                predictionCol=\"prediction\")\r\nrmse = evaluator.evaluate(predictions)\r\nprint(\"Root-mean-square error = \" + str(rmse))\r\n\r\nprint('5500')","user":"anonymous","dateUpdated":"2019-04-11T03:01:44+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"5000\n+------+-------+------+----------+----------+\n|userID|movieID|rating|       _c3|prediction|\n+------+-------+------+----------+----------+\n| 13170|    148|   3.0| 885524891| 0.2673341|\n|  1259|    148|   5.0| 828625487|  3.781226|\n|  5585|    148|   3.0| 833940677| 3.1720262|\n| 80168|    148|   4.0| 835820190| 3.3424747|\n| 36445|    148|   4.5|1419358555|  1.781539|\n| 46146|    148|   2.0| 839629075| 1.2528625|\n|125969|    148|   3.0| 940129037| 2.8797817|\n| 64843|    148|   3.5|1104862927| 2.7492032|\n|111523|    148|   2.0| 942665835| 3.2356071|\n|118205|    148|   3.5|1138041704| 2.9195168|\n+------+-------+------+----------+----------+\nonly showing top 10 rows\n\nRoot-mean-square error = 0.815900439836\n5500\n"}]},"apps":[],"jobName":"paragraph_1554847746715_577875157","id":"20190409-220906_1216729395","dateCreated":"2019-04-09T22:09:06+0000","dateStarted":"2019-04-11T03:01:44+0000","dateFinished":"2019-04-11T03:06:58+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:45276"},{"text":"%spark2.pyspark\n\n#<<<<<<<<<<<SEcond PArt>>>>>>>>>>\n\nprint('>>>>>>Movies already loved and highly rated by User#1<<<<<<<')\n\n# Finding Highest rated Movies and genres by User:1 from train data\n\nuser1_train= train.filter(train['userID']==1)\n\nuser1_trains= user1_train.orderBy('rating',ascending=False)\n\nfor user1 in user1_trains.collect():\n    key1 = str(user1['movieID'])\n    print (user1['movieID'],movieNames[key1][0], movieNames[key1][1],user1['rating'])\n\n","user":"anonymous","dateUpdated":"2019-04-11T03:10:35+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1554847861547_1507614034","id":"20190409-221101_2017347755","dateCreated":"2019-04-09T22:11:01+0000","dateStarted":"2019-04-11T03:10:36+0000","dateFinished":"2019-04-11T03:12:20+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:45277"},{"text":"%spark2.pyspark\n\n#>>>Prediction<<<<<<\n\nprint('>>>>Recomendation for User#1<<<<<')\n\n# Predicting Movies/genres, supposed to be loved by User:1 and rated higher\n\nuser1_test= test.filter(test['userID']==1).select(['movieID','userID'])\n\n#user1_test.show()\n\nrecommendation = model2.transform(user1_test)\n\ntopRecommendations= recommendation.orderBy('prediction',ascending=False)\n\n","user":"anonymous","dateUpdated":"2019-04-11T17:04:38+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python","editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":">>>>Recomendation for User#1<<<<<\n(260, 'Star Wars: Episode IV - A New Hope (1977)', 'Action|Adventure|Sci-Fi\\r\\n', 4.177889823913574)\n(7153, '\"Lord of the Rings: The Return of the King', ' The (2003)\"', 3.983344316482544)\n(1240, '\"Terminator', ' The (1984)\"', 3.9788243770599365)\n(6242, 'Ringu (Ring) (1998)', 'Horror|Mystery|Thriller\\r\\n', 3.9252049922943115)\n(1214, 'Alien (1979)', 'Horror|Sci-Fi\\r\\n', 3.9051353931427)\n(541, 'Blade Runner (1982)', 'Action|Sci-Fi|Thriller\\r\\n', 3.898895740509033)\n(2716, 'Ghostbusters (a.k.a. Ghost Busters) (1984)', 'Action|Comedy|Sci-Fi\\r\\n', 3.8858866691589355)\n(50, '\"Usual Suspects', ' The (1995)\"', 3.8557701110839844)\n(2761, '\"Iron Giant', ' The (1999)\"', 3.7673757076263428)\n(4226, 'Memento (2000)', 'Mystery|Thriller\\r\\n', 3.7665700912475586)\n(1278, 'Young Frankenstein (1974)', 'Comedy|Fantasy\\r\\n', 3.754211187362671)\n(2140, '\"Dark Crystal', ' The (1982)\"', 3.736107110977173)\n(7482, 'Enter the Dragon (1973)', 'Action|Crime\\r\\n', 3.7041568756103516)\n(2692, 'Run Lola Run (Lola rennt) (1998)', 'Action|Crime\\r\\n', 3.701925039291382)\n(4446, 'Final Fantasy: The Spirits Within (2001)', 'Adventure|Animation|Fantasy|Sci-Fi\\r\\n', 3.6953625679016113)\n(223, 'Clerks (1994)', 'Comedy\\r\\n', 3.693181276321411)\n(2648, 'Frankenstein (1931)', 'Drama|Horror|Sci-Fi\\r\\n', 3.669384241104126)\n(4011, 'Snatch (2000)', 'Comedy|Crime|Thriller\\r\\n', 3.6585583686828613)\n(4027, '\"O Brother', ' Where Art Thou? (2000)\"', 3.6224305629730225)\n(1321, '\"American Werewolf in London', ' An (1981)\"', 3.6140642166137695)\n(4105, '\"Evil Dead', ' The (1981)\"', 3.6054906845092773)\n(3037, 'Little Big Man (1970)', 'Western\\r\\n', 3.591733455657959)\n(1370, 'Die Hard 2 (1990)', 'Action|Adventure|Thriller\\r\\n', 3.5601418018341064)\n(919, '\"Wizard of Oz', ' The (1939)\"', 3.548135280609131)\n(1089, 'Reservoir Dogs (1992)', 'Crime|Mystery|Thriller\\r\\n', 3.4425265789031982)\n(8507, 'Freaks (1932)', 'Crime|Drama|Horror\\r\\n', 3.4304966926574707)\n(1208, 'Apocalypse Now (1979)', 'Action|Drama|War\\r\\n', 3.3846189975738525)\n(1090, 'Platoon (1986)', 'Drama|War\\r\\n', 3.3342580795288086)\n(253, 'Interview with the Vampire: The Vampire Chronicles (1994)', 'Drama|Horror\\r\\n', 3.330965757369995)\n(2173, '\"Navigator: A Mediaeval Odyssey', ' The (1988)\"', 3.0962448120117188)\n(4133, 'Masters of the Universe (1987)', 'Action|Adventure|Fantasy|Sci-Fi\\r\\n', 3.040674924850464)\n(1009, 'Escape to Witch Mountain (1975)', 'Adventure|Children|Fantasy\\r\\n', 2.9706642627716064)\n(1750, 'Star Kid (1997)', 'Adventure|Children|Fantasy|Sci-Fi\\r\\n', 2.4027302265167236)\n"}]},"apps":[],"jobName":"paragraph_1554848124705_-959428206","id":"20190409-221524_1421591426","dateCreated":"2019-04-09T22:15:24+0000","dateStarted":"2019-04-11T03:58:25+0000","dateFinished":"2019-04-11T03:59:32+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:45278"},{"text":"%spark2.pyspark\n\nuser1_testr= test.filter(test['userID']==1).select(['movieID','rating'])\n\nuser1_testr.printSchema()\n\nxx=user1_testr.collect()","user":"anonymous","dateUpdated":"2019-04-11T17:41:28+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- movieID: integer (nullable = true)\n |-- rating: double (nullable = true)\n\n"}]},"apps":[],"jobName":"paragraph_1555004248239_-1719018350","id":"20190411-173728_1654363830","dateCreated":"2019-04-11T17:37:28+0000","dateStarted":"2019-04-11T17:41:28+0000","dateFinished":"2019-04-11T17:42:17+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:45279"},{"text":"%spark2.pyspark\n\ntopRecommendations.printSchema()\n","user":"anonymous","dateUpdated":"2019-04-11T17:12:32+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- movieID: integer (nullable = true)\n |-- userID: integer (nullable = true)\n |-- prediction: float (nullable = false)\n\n"}]},"apps":[],"jobName":"paragraph_1554954842649_707598567","id":"20190411-035402_1976024898","dateCreated":"2019-04-11T03:54:02+0000","dateStarted":"2019-04-11T17:12:32+0000","dateFinished":"2019-04-11T17:12:32+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:45280"},{"text":"%spark2.pyspark\nyy = topRecommendations.collect()","user":"anonymous","dateUpdated":"2019-04-11T17:02:20+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1555001447444_411557426","id":"20190411-165047_1531009435","dateCreated":"2019-04-11T16:50:47+0000","dateStarted":"2019-04-11T17:02:10+0000","dateFinished":"2019-04-11T17:02:10+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:45281"},{"text":"%spark2.pyspark\n\nprint('>>>>Recommender Predicted Rating and Actual Rating for User#1 side by side <<<<<')\n\nfor i in range(0,10):\n    for x in xx:\n        if x['movieID']==yy[i][0]:\n            print (yy[i][0],movieNames[str(yy[i][0])][0], movieNames[str(yy[i][0])][1],yy[i][2],x['rating'])\n    \n","user":"anonymous","dateUpdated":"2019-04-11T19:03:09+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":">>>>Recommender Predicted Rating and Actual Rating for User#1 side by side <<<<<\n(260, 'Star Wars: Episode IV - A New Hope (1977)', 'Action|Adventure|Sci-Fi\\r\\n', 4.177889823913574, 4.0)\n(7153, '\"Lord of the Rings: The Return of the King', ' The (2003)\"', 3.983344316482544, 5.0)\n(1240, '\"Terminator', ' The (1984)\"', 3.9788243770599365, 4.0)\n(6242, 'Ringu (Ring) (1998)', 'Horror|Mystery|Thriller\\r\\n', 3.9252049922943115, 3.5)\n(1214, 'Alien (1979)', 'Horror|Sci-Fi\\r\\n', 3.9051353931427, 4.0)\n(541, 'Blade Runner (1982)', 'Action|Sci-Fi|Thriller\\r\\n', 3.898895740509033, 4.0)\n(2716, 'Ghostbusters (a.k.a. Ghost Busters) (1984)', 'Action|Comedy|Sci-Fi\\r\\n', 3.8858866691589355, 3.5)\n(50, '\"Usual Suspects', ' The (1995)\"', 3.8557701110839844, 3.5)\n(2761, '\"Iron Giant', ' The (1999)\"', 3.7673757076263428, 3.0)\n(4226, 'Memento (2000)', 'Mystery|Thriller\\r\\n', 3.7665700912475586, 3.5)\n"}]},"apps":[],"jobName":"paragraph_1555001378291_-496742782","id":"20190411-164938_327598038","dateCreated":"2019-04-11T16:49:38+0000","dateStarted":"2019-04-11T19:03:09+0000","dateFinished":"2019-04-11T19:03:09+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:45282"},{"text":"%spark2.pyspark\ntype(ratings)","user":"anonymous","dateUpdated":"2019-04-11T04:09:40+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"<class 'pyspark.sql.dataframe.DataFrame'>\n"}]},"apps":[],"jobName":"paragraph_1554955521914_509614348","id":"20190411-040521_499631005","dateCreated":"2019-04-11T04:05:21+0000","dateStarted":"2019-04-11T04:09:41+0000","dateFinished":"2019-04-11T04:09:41+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:45284"},{"text":"%spark2.pyspark\n\ntype(test)","user":"anonymous","dateUpdated":"2019-04-11T17:35:56+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"<class 'pyspark.sql.dataframe.DataFrame'>\n"}]},"apps":[],"jobName":"paragraph_1554955780931_-1950887161","id":"20190411-040940_1001813669","dateCreated":"2019-04-11T04:09:40+0000","dateStarted":"2019-04-11T17:35:57+0000","dateFinished":"2019-04-11T17:35:57+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:45285"},{"text":"%spark2.pyspark\n","user":"anonymous","dateUpdated":"2019-04-11T17:35:56+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1555004156879_-1197237545","id":"20190411-173556_1736841023","dateCreated":"2019-04-11T17:35:56+0000","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:45286"}],"name":"ML7","id":"2E751C2H7","angularObjects":{"2CHS8UYQQ:shared_process":[],"2C8A4SZ9T_livy2:shared_process":[],"2CK8A9MEG:shared_process":[],"2C4U48MY3_spark2:shared_process":[],"2CKAY1A8Y:shared_process":[],"2CKEKWY8Z:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}